#include <pqxx/pqxx>
#include <iostream>
using namespace std;
using namespace pqxx;

class DBOperator{

 public:
  void init_db();
  


};


void DBOperator::init_db(){

  std::string sql;

  try{
    connection C("dbname=hw4database user=userhw4 password=000000");
    if (C.is_open()) {
      cout << "Opened database successfully: " << C.dbname() << endl;
    } else {
      cout << "Can't open database" << endl;
      return;
    }
    /* Create SQL statement */
    sql = "CREATE TABLE account(account_id BIGINT   PRIMARY KEY, balance INT DEFAULT 0);";

    std::string drop_table = "DROP TABLE IF EXISTS account;";

    work W(C);


    //W.exec(drop_table);
    W.exec( drop_table );
    W.exec( sql );
    W.commit();
    cout << "Table created successfully" << endl;
    C.disconnect ();
  } catch (const std::exception &e){
    cerr << e.what() << std::endl;
    return;
  }

  return;
  

}



void DBOperator::insert_attribute(string name){

  try{
    connection C("dbname=hw4database user=userhw4 password=000000");
    if (C.is_open()) {
      //      cout << "Opened database successfully: " << C.dbname() << endl;
    } else {
      cout << "Can't open database" << endl;
      return;
    }
    /* Create SQL statement */
    std::string sql = "ALTER TABLE account ADD COLUMN " +name+" VARCHAR DEFALUT NULL;";
    work W(C);
    
    W.exec( sql );
    W.commit();
    cout << "Table created successfully" << endl;
    C.disconnect ();
  } catch (const std::exception &e){
    cerr << e.what() << std::endl;
    return;
  }

  return;
  
  
}
